
[shadow dom]
来看一个简单示例：

<template id="my-paragraph">
  <p> Paragraph content. </p>
</template>
上面的内容不会在页面中渲染，除非使用 JavaScript 来引用其中的内容，然后使用类似如下的代码来挂载到 DOM 中：

var template = document.getElementById('my-paragraph');
var templateContent = template.content;
document.body.appendChild(templateContent);


* close mode
~~~
class MyComponent extends HTMLElement {
  constructor () {
    super();
    // With closed, a ShadowRoot reference needs to be stored
    this._shadowRoot = this.attachShadow({ mode: 'closed' });
  }
  connectedCallback() {
    // Do stuff with ShadowRoot via stored reference
  }
}
// Define component in custom element registry
window.customElements.define('my-component', MyComponent);
// Create component
const el = document.createElement('my-component');
document.body.appendChild(el);
// ShadowRoot is not publicly available
console.log(el.shadowRoot); // => null
~~~

Because Element.shadowRoot’s public access is disallowed, it’s commonly perceived as a “security” feature. However, because it requires a stored reference, it’s not actually all that secure.

~~~
// Continuing the above example
console.log(el._shadowRoot); // => ShadowRoot {}
~~~

The alternative perhaps would be to store the ShadowRoot references in a WeakMap; however, that would not prevent an attacker from overriding Element.prototype.attachShadow.







[extension]
--load-extension : 	Comma-separated list of paths to extensions to load at startup. 

load more than one extension:
I'm loading react-dev-tools and redux-dev-tools in a NW.js manifest like this: ` --load-extension='./chrome_extensions/lmhkpmbekcpmknklioeibfkpmmfibljd/2.17.0_0,./chrome_extensions/fmkadmapgofadopljbjfkapdkoienihi/3.6.0_0'`


Note:
Most of the command-line flags are only effective when all existing instances of Chrome that corresponds to the chrome profile have been terminated.
If you don't see any Chrome window, open the task manager and kill every process called chrome.exe. After doing that, you can use --load-extension=... to temporarily load a Chrome extension (the extension will be gone when you start Chrome without this flag, again only after closing all running instances of Chrome).